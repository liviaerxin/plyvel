name: plyvel

on: [push, pull_request]

jobs:
  wheel:
    name: ${{ matrix.os }}-${{matrix.python-version}}-wheel
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2

    # Used to host cibuildwheel
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U build
        python -c 'import toml; c = toml.load("pyproject.toml"); print("\n".join(c["build-system"]["requires"]))' | pip install -r /dev/stdin

    - name: Install cibuildwheel
      run: |
          python -m pip install -U cibuildwheel auditwheel delocate

    - name: Build
      env:
        CIBW_BUILD: "cp36-* cp38-* cp39-*"
        CIBW_SKIP: "*-win32 *-manylinux_i686 pp27-* cp27-* cp35-*"
        CIBW_BEFORE_BUILD_LINUX: yum -y install libleveldb-dev libsnappy-dev
        CIBW_REPAIR_WHEEL_COMMAND_LINUX: "auditwheel repair --lib-sdir . -w {dest_dir} {wheel}"
        CIBW_BEFORE_BUILD_MACOS: brew install snappy leveldb
        CIBW_REPAIR_WHEEL_COMMAND_MACOS: "delocate-listdeps {wheel} && delocate-wheel -w {dest_dir} -v {wheel}"
      run: |
          python -m cibuildwheel --output-dir wheelhouse

    - uses: actions/upload-artifact@v2
      with:
          path: ./wheelhouse/*.whl